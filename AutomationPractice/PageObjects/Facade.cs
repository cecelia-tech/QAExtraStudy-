using OpenQA.Selenium;

namespace AutomationPractice.PageObjects;

public class Facade
{
    private CartPage cartPage;
    private DressesPage dressesPage;
    private HomePage homePage;
    private LoginPage loginPage;
    private ProductPage productPage;
    private SignUpPage signUpPage;
    private UserHomePage userHomePage;
    private WishListsPage wishListsPage;

    public Facade()
    {
        cartPage = Page.CartPage;
        dressesPage = Page.DressesPage;
        homePage = Page.HomePage;
        loginPage = Page.Login;
        productPage = Page.ProductPage;
        signUpPage = Page.SignUp;
        userHomePage = Page.UserHomePage;
        wishListsPage = Page.WishLists;
    }

    public bool LoginInIntoAnAccount(string username, string password)
    {
        try
        {
            userHomePage = Login(username, password);

            return true;
        }
        catch (Exception)
        {
            return false;
        }
    }

    public bool CreateAnAccount(string firstName, string lastName, string email, string password,
        string address, string city, string state, string zipCode, string country, string mobile_phone, string alias)
    {
        try
        {
            loginPage = loginPage.LoadPage();

            if (!loginPage.IsPageLoaded()) { return false; }

            signUpPage = loginPage.SubmitEmailForm(email);
            if (!signUpPage.IsPageLoaded())
            {
                return false;
            }

            userHomePage = signUpPage.FillRegistrationForm(firstName, lastName, email, password,
            address, city, state, zipCode, country, mobile_phone, alias);

            return userHomePage.IsPageLoaded();
        }
        catch (Exception)
        {
            return false;
        }
    }

    public bool AddToAutoCreatedWishlist(string username, string password)
    {
        try
        {
            userHomePage = Login(username, password);

            wishListsPage = userHomePage.ClickWishlist();

            if (!wishListsPage.IsPageLoaded() || wishListsPage.DoesAutoGeneratedWishListExist())
            {
                return false;
            }

            productPage = wishListsPage.ClickProduct();

            if (!productPage.IsPageLoaded()) { return false; }

            productPage = productPage.AddToWishList();

            wishListsPage = productPage.GoToUserHomePage().ClickWishlist();

            return wishListsPage.CheckProductAddedToAutoWishList();
        }
        catch (Exception)
        {
            return false;
        }
    }

    public bool AddToCustomWishlist(string username, string password, string cartName)
    {
        try
        {
            userHomePage = Login(username, password);

            wishListsPage = userHomePage.ClickWishlist();

            if (!wishListsPage.IsPageLoaded())
            {
                return false;
            }

            wishListsPage = wishListsPage.CreateMyWishList(cartName);

            if (!wishListsPage.DoesCustomWishlistWasCreated(cartName))
            {
                return false;
            }

            productPage = wishListsPage.ClickProduct();

            if (!productPage.IsPageLoaded()) { return false; }

            productPage = productPage.AddToWishList();

            wishListsPage = productPage.GoToUserHomePage().ClickWishlist();

            return wishListsPage.CheckProductAddedToCustomWishList(cartName);
        }
        catch (Exception)
        {
            return false;
        }
    }

    public bool AbleToAddThreeItemsToTheCart(string username, string password)
    {
        try
        {
            userHomePage = Login(username, password);

            dressesPage = userHomePage.ClickDressesOption();
            if (!dressesPage.IsPageLoaded()) { return false; }

            dressesPage = dressesPage.AddThreeDressesToTheCart();
            cartPage = dressesPage.GoToCart();

            if (cartPage.CountProductsInTheCart() != 3 || cartPage.GetCartTotal() != 107.97)
            {
                return false;
            }

            return true;
        }
        catch (Exception)
        {
            return false;
        }
    }

    private UserHomePage Login(string username, string password)
    {
        loginPage = loginPage.LoadPage();

        if (!loginPage.IsPageLoaded())
        {
            throw new Exception();
        }

        userHomePage = loginPage.FillLogInDetails(username, password);

        if (!userHomePage.IsPageLoaded())
        {
            throw new Exception();
        }

        return userHomePage;
    }
}
